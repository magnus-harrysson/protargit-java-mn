plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.3.2"
}

version = "0.1"
group = "com.harrys_it.ots"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'io.micronaut:micronaut-http-validation'

    implementation 'io.micronaut:micronaut-http-client'
    implementation 'io.micronaut:micronaut-jackson-databind'
    implementation 'io.micronaut:micronaut-runtime'
    implementation 'io.micronaut:micronaut-validation'
    implementation 'jakarta.annotation:jakarta.annotation-api'
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'
    implementation 'com.fazecast:jSerialComm:2.9.1'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'io.micronaut.test:micronaut-test-junit5:3.3.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testAnnotationProcessor 'io.micronaut:micronaut-inject-java'
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.5.1'
    runtimeOnly 'ch.qos.logback:logback-classic'
}

test {
    useJUnitPlatform()
}

application {
    mainClass.set("com.harrys_it.ots.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.harrys_it.ots.*")
    }
}


